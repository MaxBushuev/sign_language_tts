/* Sutton SignWriting Core Module v2.0.0 (https://github.com/sutton-signwriting/core), author: Steve Slevinski (https://SteveSlevinski.me), license: MIT */
let o={colorize:"C",colorhex:"(?:[0-9a-fA-F]{3}){1,2}",colorname:"[a-zA-Z]+",padding:"P[0-9]{2}",zoom:"Z(?:[0-9]+(?:\\.[0-9]+)?|x)",classbase:"-?[_a-zA-Z][_a-zA-Z0-9-]{0,100}",id:"[a-zA-Z][_a-zA-Z0-9-]{0,100}"};o.colorbase=`(?:${o.colorhex}|${o.colorname})`,o.color=`_${o.colorbase}_`,o.colors=`_${o.colorbase}(?:,${o.colorbase})?_`,o.background=`G${o.color}`,o.detail=`D${o.colors}`,o.detailsym=`D[0-9]{2}${o.colors}`,o.classes=`${o.classbase}(?: ${o.classbase})*`,o.full=`-(${o.colorize})?(${o.padding})?(${o.background})?(${o.detail})?(${o.zoom})?(?:-((?:${o.detailsym})*))?(?:-(${o.classes})?!(?:(${o.id})!)?)?`;const e=e=>(new RegExp(`^${o.colorhex}$`).test(e)?"#":"")+e,t=t=>{const a=`^${o.full}`,s=("string"==typeof t?t.match(new RegExp(a)):[])||[];return i={colorize:s[1]?!!s[1]:void 0,padding:s[2]?parseInt(s[2].slice(1)):void 0,background:s[3]?e(s[3].slice(2,-1)):void 0,detail:s[4]?s[4].slice(2,-1).split(",").map(e):void 0,zoom:s[5]?"Zx"===s[5]?"x":parseFloat(s[5].slice(1)):void 0,detailsym:s[6]?s[6].match(new RegExp(o.detailsym,"g")).map((o=>{const t=o.split("_"),a=t[1].split(",").map(e);return{index:parseInt(t[0].slice(1)),detail:a}})):void 0,classes:s[7]?s[7]:void 0,id:s[8]?s[8]:void 0},Object.fromEntries(Object.entries(i).filter((([o,e])=>void 0!==e)));var i},a=e=>{if("object"!=typeof e||null===e)return;let t="-";t+=e.colorize?"C":"";const a=parseInt(e.padding);t+=!a||a<=0||a>99?"":"P"+(a>9?a:"0"+a);const s=e.background&&"string"==typeof e.background?e.background.match(o.colorbase)[0]:void 0;t+=s?"G_"+s+"_":"";const i=e.detail&&e.detail[0]&&"string"==typeof e.detail[0]?e.detail[0].match(o.colorbase)[0]:void 0,l=e.detail&&e.detail[1]&&"string"==typeof e.detail[1]?e.detail[1].match(o.colorbase)[0]:void 0;i&&(t+="D_"+i,l&&(t+=","+l),t+="_");const r="x"===e.zoom?"x":parseFloat(e.zoom);t+=!r||r<=0?"":"Z"+r;let c="";const n=e.detailsym&&Array.isArray(e.detailsym)?e.detailsym.map((e=>{const t=parseInt(e.index);if(!t||t<=0||t>99)return"";let a="D"+(t>9?t:"0"+t);const s=e.detail&&e.detail[0]?e.detail[0].match(o.colorbase)[0]:void 0,i=e.detail&&e.detail[1]?e.detail[1].match(o.colorbase)[0]:void 0;return s&&(a+="_"+s,i&&(a+=","+i),a+="_"),a})):[];c+=n.join("");let d="";const p=e.classes&&"string"==typeof e.classes?e.classes.match(o.classes)[0]:void 0;d+=p||"";const m=e.id&&"string"==typeof e.id?e.id.match(o.id)[0]:void 0;return d+=p||m?"!":"",d+=m?m+"!":"",t+(c||d?"-"+c:"")+(d?"-"+d:"")},s=(o,e)=>{"object"!=typeof o&&(o={}),"object"!=typeof e&&(e={});const t="zoom"in o?o.zoom:1,a="zoom"in e?e.zoom:1;return{...o,...e,zoom:t*a}},i=o=>"string"!=typeof o?[0,0,0]:o.replace(/rgba?\((.+?)\)/gi,((o,e)=>e)).split(",").map(Number),l=o=>o.slice(0,3).map((o=>o.toString(16).padStart(2,"0"))).join(""),r=(o,e=0)=>{const t=i(o);return 4==t.length&&t[3]<=e?"transparent":l(t)},c=(o,e)=>{const t=i(e),a=i(o),s=4==a.length?a[3]:1;return 0==s?"transparent":l(a.map(((o,e)=>parseInt((1-s)*t[e]+s*o))))};export{a as compose,s as merge,t as parse,o as re,r as rgb2hex,c as rgba2hex};
