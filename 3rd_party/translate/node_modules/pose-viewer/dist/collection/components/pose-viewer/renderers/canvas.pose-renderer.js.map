{"version":3,"file":"canvas.pose-renderer.js","sourceRoot":"","sources":["../../../../src/components/pose-viewer/renderers/canvas.pose-renderer.tsx"],"names":[],"mappings":"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","sourcesContent":["import {PoseBodyFrameModel, PosePointModel, RGBColor} from \"pose-format\";\nimport {PoseRenderer} from \"./pose-renderer\";\nimport {h} from \"@stencil/core\";\n\n\nexport class CanvasPoseRenderer extends PoseRenderer {\n  ctx!: CanvasRenderingContext2D;\n  thickness!: number;\n\n  renderJoint(_: number, joint: PosePointModel, color: RGBColor) {\n    const {R, G, B} = color;\n    this.ctx.strokeStyle = `rgba(0, 0, 0, 0)`;\n    this.ctx.fillStyle = `rgba(${R}, ${G}, ${B}, ${joint.C})`;\n\n    const radius = Math.round(this.thickness / 3);\n    this.ctx.beginPath();\n    this.ctx.arc(this.x(joint.X), this.y(joint.Y), radius, 0, 2 * Math.PI);\n    this.ctx.fill();\n    this.ctx.stroke();\n  }\n\n  renderLimb(from: PosePointModel, to: PosePointModel, color: RGBColor) {\n    const {R, G, B} = color;\n\n    this.ctx.lineWidth = this.thickness * 5/4;\n    this.ctx.strokeStyle = `rgba(${R}, ${G}, ${B}, ${(from.C + to.C) / 2})`;\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.x(from.X), this.y(from.Y));\n    this.ctx.lineTo(this.x(to.X), this.y(to.Y));\n    this.ctx.stroke();\n  }\n\n  // renderLimb(from: PosePointModel, to: PosePointModel, color: RGBColor) {\n  //   const {R, G, B} = color;\n  //   this.ctx.fillStyle = `rgba(${R}, ${G}, ${B}, ${(from.C + to.C) / 2})`;\n  //\n  //   const x = this.x((from.X + to.X) / 2);\n  //   const y = this.y((from.Y + to.Y) / 2);\n  //\n  //   const sub = {x: this.x(from.X - to.X), y: this.y(from.Y - to.Y)}\n  //\n  //   const length = Math.sqrt(Math.pow(sub.x, 2) + Math.pow(sub.y, 2));\n  //   const radiusX = Math.floor(length / 2);\n  //   const radiusY = this.thickness;\n  //   const rotation = Math.floor(Math.atan2(sub.y, sub.x) * 180 / Math.PI);\n  //   this.ctx.beginPath();\n  //   this.ctx.ellipse(x, y, radiusX, radiusY, rotation, 0, 360);\n  //   this.ctx.fill();\n  // }\n\n  render(frame: PoseBodyFrameModel) {\n    const drawCanvas = () => {\n      const canvas = this.viewer.element.shadowRoot.querySelector('canvas');\n      if (canvas) {\n        // TODO: this should be unnecessary, but stencil doesn't apply attributes\n        canvas.width = this.viewer.elWidth;\n        canvas.height = this.viewer.elHeight;\n\n        this.ctx = canvas.getContext('2d');\n\n        if (this.viewer.background) {\n          this.ctx.fillStyle = this.viewer.background;\n          this.ctx.fillRect(0, 0, canvas.width, canvas.height);\n        } else {\n          this.ctx.clearRect(0, 0, canvas.width, canvas.height);\n        }\n\n        const w = this.viewer.elWidth - 2 * this.viewer.elPadding.width;\n        const h = this.viewer.elHeight - 2 * this.viewer.elPadding.height;\n        this.thickness = this.viewer.thickness ?? Math.round(Math.sqrt(w * h) / 150);\n        this.renderFrame(frame);\n      } else {\n        throw new Error(\"Canvas isn't available before first render\")\n      }\n    };\n\n    try {\n      drawCanvas();\n    } catch (e) {\n      requestAnimationFrame(drawCanvas)\n    }\n\n\n    return (\n      <canvas width={this.viewer.elWidth} height={this.viewer.elHeight}/>\n    )\n  }\n}\n"]}