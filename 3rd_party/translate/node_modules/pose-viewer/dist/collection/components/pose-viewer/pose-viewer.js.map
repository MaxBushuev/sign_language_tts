{"version":3,"file":"pose-viewer.js","sourceRoot":"","sources":["../../../src/components/pose-viewer/pose-viewer.tsx"],"names":[],"mappings":"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ntent":["// @ts-ignore\nimport {Component, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch} from '@stencil/core';\nimport type {PoseModel} from \"pose-format/dist/types\";\nimport {Pose} from \"pose-format\";\nimport type {Buffer} from \"buffer\";\n// import {Pose, PoseModel} from \"../../../../pose_format/dist\";\nimport {PoseRenderer} from \"./renderers/pose-renderer\";\nimport {SVGPoseRenderer} from \"./renderers/svg.pose-renderer\";\nimport {CanvasPoseRenderer} from \"./renderers/canvas.pose-renderer\";\n\ndeclare type ResizeObserver = any;\ndeclare var ResizeObserver: ResizeObserver;\n\n\n@Component({\n  tag: 'pose-viewer',\n  styleUrl: 'pose-viewer.css',\n  shadow: true\n})\nexport class PoseViewer {\n  @Element() element: HTMLElement;\n  private resizeObserver: ResizeObserver;\n  private fetchAbortController: AbortController;\n\n  private lastSrc: string | Buffer;\n  @Prop() src: string | Buffer; // Source URL for .pose file or path to a local file or Buffer\n  @Prop() svg: boolean = false; // Render in an SVG instead of a canvas\n\n  // Dimensions\n  @Prop() width: string = null;\n  @Prop() height: string = null;\n  @Prop() aspectRatio: number = null;\n  @Prop() padding: string = null;\n  @Prop() thickness: number = null;\n\n  @Prop() background: string = null;\n\n  elWidth: number;\n  elHeight: number;\n  elPadding: { width: number, height: number };\n\n  // MediaElement-like properties\n  @Prop({mutable: true}) loop: boolean = false;\n  @Prop() autoplay: boolean = true;\n  @Prop({mutable: true}) playbackRate: number = 1;\n\n  @Prop({mutable: true}) currentTime: number = NaN; // This affects re-rendering\n  @Prop({mutable: true}) duration: number = NaN;\n  @Prop({mutable: true}) ended: boolean = false;\n  @Prop({mutable: true}) paused: boolean = true;\n  @Prop({mutable: true}) readyState: number = 0;\n\n  // MediaElement-like events\n  @Event() canplaythrough$: EventEmitter<void>;\n  @Event() ended$: EventEmitter<void>;\n  @Event() loadeddata$: EventEmitter<void>;\n  @Event() loadedmetadata$: EventEmitter<void>;\n  @Event() loadstart$: EventEmitter<void>;\n  @Event() pause$: EventEmitter<void>;\n  @Event() play$: EventEmitter<void>;\n  @Event() firstRender$: EventEmitter<void>;\n  @Event() render$: EventEmitter<void>;\n  // @Event() ratechange$: EventEmitter<void>;\n  // @Event() seeked$: EventEmitter<void>;\n  // @Event() seeking$: EventEmitter<void>;\n  // @Event() timeupdate$: EventEmitter<void>;\n\n  hasRendered = false;\n\n  renderer!: PoseRenderer;\n\n  media: HTMLMediaElement;\n  pose: PoseModel;\n\n  @State() error: Error;\n\n  private loopInterval: any;\n\n  componentWillLoad() {\n    this.renderer = this.svg ? new SVGPoseRenderer(this) : new CanvasPoseRenderer(this);\n\n    return this.srcChange();\n  }\n\n  componentDidLoad() {\n    this.resizeObserver = new ResizeObserver(this.setDimensions.bind(this));\n    this.resizeObserver.observe(this.element);\n  }\n\n  private async loadPose() {\n    // Abort previous request if it exists\n    if (this.fetchAbortController) {\n      this.fetchAbortController.abort();\n    }\n\n    if(typeof this.src === 'string') {\n      const isRemoteUrl = this.src.startsWith('http') || this.src.startsWith('//');\n      const isBrowserEnvironment = typeof window !== 'undefined';\n\n      if (isRemoteUrl || isBrowserEnvironment) {\n        // Remote URL or Browser environment\n        this.fetchAbortController = new AbortController();\n        this.pose = await Pose.fromRemote(this.src, this.fetchAbortController);\n      } else {\n        // Local environment\n        this.pose = await Pose.fromLocal(this.src);\n      }\n    } else {\n      this.pose = Pose.from(this.src);\n    }\n  }\n\n  private initPose() {\n    this.setDimensions();\n\n    // Loaded done events\n    this.loadedmetadata$.emit();\n    this.loadeddata$.emit();\n    this.canplaythrough$.emit();\n\n    this.duration = (this.pose.body.frames.length - 1) / this.pose.body.fps;\n    this.currentTime = 0;\n\n    if (this.autoplay) {\n      this.play();\n    }\n  }\n\n  @Watch('src')\n  async srcChange() {\n    // Can occur from both an attribute change AND componentWillLoad event\n    if (this.src === this.lastSrc) {\n      return;\n    }\n    this.lastSrc = this.src;\n\n    // Clear previous pose\n    this.clearInterval();\n    this.setDimensions();\n    delete this.pose;\n    this.currentTime = NaN;\n    this.duration = NaN;\n    this.hasRendered = false;\n\n    if (!this.src) {\n      return;\n    }\n    // Load new pose\n    this.ended = false;\n    this.loadstart$.emit();\n\n    this.error = null;\n    try {\n      await this.loadPose();\n      this.initPose();\n      this.error = null;\n    } catch (e) {\n      console.error('PoseViewer error', e);\n      this.error = e;\n    }\n  }\n\n  setDimensions() {\n    this.elPadding = {width: 0, height: 0};\n    if (!this.pose) {\n      this.elWidth = 0;\n      this.elHeight = 0;\n      return;\n    }\n\n    // When nothing is marked, use pose dimensions\n    if (!this.width && !this.height) {\n      this.elWidth = this.pose.header.width;\n      this.elHeight = this.pose.header.height;\n      return;\n    }\n\n    const rect = this.element.getBoundingClientRect();\n    const parseSize = (size, by) => size.endsWith(\"px\") ? Number(size.slice(0, -2)) : (size.endsWith(\"%\") ? by * size.slice(0, -1) / 100 : Number(size));\n\n    // When both are marked,\n    if (this.width && this.height) {\n      this.elWidth = parseSize(this.width, rect.width);\n      this.elHeight = parseSize(this.height, rect.height);\n    } else if (this.width) {\n      this.elWidth = parseSize(this.width, rect.width);\n      this.elHeight = this.aspectRatio ? this.elWidth * this.aspectRatio :\n        (this.pose.header.height / this.pose.header.width) * this.elWidth;\n    } else if (this.height) {\n      this.elHeight = parseSize(this.height, rect.height);\n      this.elWidth = this.aspectRatio ? this.elHeight / this.aspectRatio :\n        (this.pose.header.width / this.pose.header.height) * this.elHeight;\n    }\n\n    // General padding\n    if (this.padding) {\n      this.elPadding.width += parseSize(this.padding, this.elWidth);\n      this.elPadding.height += parseSize(this.padding, this.elHeight);\n    }\n\n    // Aspect ratio padding\n    const ratioWidth = this.elWidth - this.elPadding.width * 2;\n    const ratioHeight = this.elHeight - this.elPadding.height * 2;\n    const elAR = ratioWidth / ratioHeight;\n    const poseAR = this.pose.header.width / this.pose.header.height;\n    if (poseAR > elAR) {\n      this.elPadding.height += (poseAR - elAR) * ratioHeight / 2;\n    } else {\n      this.elPadding.width += (elAR - poseAR) * ratioWidth / 2;\n    }\n  }\n\n  @Method()\n  async syncMedia(media: HTMLMediaElement) {\n    this.media = media;\n\n    this.media.addEventListener('pause', this.pause.bind(this));\n    this.media.addEventListener('play', this.play.bind(this));\n    const syncTime = () => this.currentTime = this.frameTime(this.media.currentTime);\n    this.media.addEventListener('seek', syncTime);\n    this.media.addEventListener('timeupdate', syncTime); // To always keep synced\n\n    // Others\n    const updateRate = () => this.playbackRate = this.media.playbackRate;\n    this.media.addEventListener('ratechange', updateRate);\n    updateRate();\n\n    // Start the pose according to the video\n    this.clearInterval();\n    if (this.media.paused) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n\n  @Method()\n  async getPose() {\n    return this.pose;\n  }\n\n\n  @Method()\n  async nextFrame() {\n    const newTime = this.currentTime + 1 / this.pose.body.fps;\n    if (newTime > this.duration) {\n      if (this.loop) {\n        this.currentTime = newTime % this.duration;\n      } else {\n        this.ended$.emit();\n        this.ended = true;\n      }\n    } else {\n      this.currentTime = newTime;\n    }\n  }\n\n  frameTime(time: number) {\n    if (!this.pose) {\n      return 0;\n    }\n    return Math.floor(time * this.pose.body.fps) / this.pose.body.fps;\n  }\n\n  @Method()\n  async play() {\n    if (!this.paused) {\n      this.clearInterval();\n    }\n\n    this.paused = false;\n    this.play$.emit();\n\n    // Reset clip if exceeded duration\n    if (this.currentTime > this.duration) {\n      this.currentTime = 0;\n    }\n\n    const intervalTime = 1000 / (this.pose.body.fps * this.playbackRate);\n    if (this.media) {\n      this.loopInterval = setInterval(() => this.currentTime = this.frameTime(this.media.currentTime), intervalTime);\n    } else {\n      // Add the time passed in an interval.\n      let lastTime = Date.now() / 1000;\n      this.loopInterval = setInterval(() => {\n        const now = Date.now() / 1000;\n        this.currentTime += (now - lastTime) * this.playbackRate;\n        lastTime = now;\n        if (this.currentTime > this.duration) {\n          if (this.loop) {\n            this.currentTime = this.currentTime % this.duration;\n          } else {\n            this.ended$.emit();\n            this.ended = true;\n\n            this.clearInterval();\n          }\n        }\n      }, intervalTime);\n    }\n  }\n\n  @Method()\n  async pause() {\n    this.paused = true;\n    this.pause$.emit();\n    this.clearInterval();\n  }\n\n  clearInterval() {\n    if (this.loopInterval) {\n      clearInterval(this.loopInterval);\n    }\n  }\n\n  disconnectedCallback() {\n    this.clearInterval();\n  }\n\n  render() {\n    if (this.error) {\n      return this.error.name !== \"AbortError\" ? this.error.message : \"\";\n    }\n\n    if (!this.pose || isNaN(this.currentTime) || !this.renderer) {\n      return \"\";\n    }\n\n    const currentTime = this.currentTime > this.duration ? this.duration : this.currentTime;\n\n    const frameId = Math.floor(currentTime * this.pose.body.fps);\n    const frame = this.pose.body.frames[frameId];\n\n    const render = this.renderer.render(frame);\n    if (!this.hasRendered) {\n      requestAnimationFrame(() => {\n        this.hasRendered = true;\n        this.firstRender$.emit();\n      });\n    }\n    requestAnimationFrame(() => this.render$.emit());\n\n    return (<Host>{render}</Host>);\n  }\n}\n\n\n"]}