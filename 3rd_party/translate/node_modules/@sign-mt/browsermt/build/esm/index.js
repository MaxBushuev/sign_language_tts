import * as comlink from "comlink";
function createBergamotWorker(path) {
  const workerClass = "Worker" in globalThis ? globalThis.Worker : require("web-worker");
  const worker = new workerClass(path);
  const abortionError = new Promise((resolve, reject) => {
    worker.addEventListener("error", reject);
    worker.addEventListener("close", resolve);
  });
  return new Proxy(comlink.wrap(worker), {
    get(target, prop, receiver) {
      if (prop === "terminate") {
        return () => {
          worker.terminate();
        };
      }
      const targetProp = Reflect.get(target, prop, receiver);
      if (typeof targetProp === "function") {
        return (...args) => {
          return Promise.race([targetProp(...args), abortionError]);
        };
      }
      return targetProp;
    }
  });
}
export {
  createBergamotWorker
};
//# sourceMappingURL=index.js.map
